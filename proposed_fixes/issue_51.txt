Generated fix successful!
                    Tested 1 patches.Suggested patch:
line 15------------------------------------------------------------------------
def median(nums):
    """
    Return the median of a non-empty list of numbers.
    BUG: For even-length lists, this incorrectly returns the upper middle
    element instead of the average of the two middle elements.
    """
    if not nums:
        raise ValueError("nums must be non-empty")

    s = sorted(nums)
    n = len(s)
    mid = n // 2

    # ‚ùå BUG: even-length case should average s[mid-1] and s[mid]
    if n % 2 == 0:
        return (s[mid - 1] + s[mid]) / 2
    else:
        return s[mid]
line 15------------------------------------------------------------------------
Original buggy code description:
The original code incorrectly returned `s[mid]` for all list lengths. For even-length lists, the median is the average of the two middle elements. The fix adds a conditional check: if the list length `n` is even, it returns the average of `s[mid-1]` and `s[mid]`; otherwise (for odd length), it returns `s[mid]` as before.
Good luck with your fix!